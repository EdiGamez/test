import static org.mockito.Mockito.*;

import jakarta.persistence.EntityManager;
import jakarta.persistence.Query;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class ControlObsmodFlowServiceTest {

    @InjectMocks
    private ControlObsmodFlowService service;

    @Mock
    private EntityManager entityManager;

    @Mock
    private Query query;

    @Before
    public void setUp() {
        when(entityManager.createNativeQuery(anyString())).thenReturn(query);
        when(query.setParameter(anyString(), any())).thenReturn(query);
    }

    @Test
    public void testInsertIntoControlObsmodFlow_success() {
        service.insertIntoControlObsmodFlow(
                "2025-05-08",
                "flow",
                "equity",
                "factor",
                "idMom",
                "Y",
                "N",
                "Y",
                "N",
                "idProxy"
        );

        verify(entityManager).createNativeQuery(anyString());
        verify(query, atLeastOnce()).setParameter(anyString(), any());
        verify(query).executeUpdate();
    }

    @Test
    public void testInsertIntoControlObsmodFlow_exceptionHandled() {
        when(entityManager.createNativeQuery(anyString())).thenThrow(new RuntimeException("DB error"));

        service.insertIntoControlObsmodFlow(
                "2025-05-08",
                "flow",
                "equity",
                "factor",
                "idMom",
                "Y",
                "N",
                "Y",
                "N",
                "idProxy"
        );

        // No assertion needed, just checking that no exception is thrown out
    }

    @Test
    public void testUpdateControlObsmodFlow_success() {
        service.updateControlObsmodFlow(
                "2025-05-08",
                "flow",
                "equity",
                "factor",
                "idMom",
                "Y",
                "N",
                "Y",
                "N",
                "idProxy"
        );

        verify(entityManager).createNativeQuery(anyString());
        verify(query, atLeastOnce()).setParameter(anyString(), any());
        verify(query).executeUpdate();
    }

    @Test
    public void testUpdateControlObsmodFlow_exceptionHandled() {
        when(entityManager.createNativeQuery(anyString())).thenThrow(new RuntimeException("DB error"));

        service.updateControlObsmodFlow(
                "2025-05-08",
                "flow",
                "equity",
                "factor",
                "idMom",
                "Y",
                "N",
                "Y",
                "N",
                "idProxy"
        );

        // No assertion needed, just checking that no exception is thrown out
    }
}
