 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.InjectMocks;
 import org.mockito.Mock;
 import org.mockito.MockitoAnnotations;
 import org.springframework.batch.core.Job;
 import org.springframework.batch.core.Step;
 import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
 import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
 import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

 @RunWith(SpringJUnit4ClassRunner.class)
 public class JobConfigExtractTaylorReportDbTest {

     @InjectMocks
     private JobConfigExtractTaylorReportDb jobConfigExtractTaylorReportDb;

     @Mock
     private JobBuilderFactory jobBuilderFactory;

     @Mock
     private StepBuilderFactory stepBuilderFactory;

    Mock
     private TaskletTaylorReportLoadDatabase taskletTaylorReportLoadDatabase;

     @Before
     public void setUp() {
         MockitoAnnotations.initMocks(this);
     }

     @Test
     public void testJobExtracFullRevalReportDb() {
         Job job = jobConfigExtractTaylorReportDb.jobExtracFullRevalReportDb(jobBuilderFactory, taskletTaylorReportLoadDatabase, stepBuilderFactory);
         assertNotNull(job);
         assertEquals("jobExtracTaylorReportDb", job.getName());
     }

     @Test
     public void testStepFrLoadDb() {
         Step step = jobConfigExtractTaylorReportDb.stepFrLoadDb(taskletTaylorReportLoadDatabase, stepBuilderFactory);
         assertNotNull(step);
         assertEquals("stepFrLoadDb", step.getName());
     }
 }
 ```
